<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">
    <!--1、=========================dispatcher已经在web.xml里面配置==================================-->
    <!-- 使用spring组件扫描 -->
    <context:component-scan base-package="com.ycy.controller"/>

    <!-- 2、3 通过annotation-driven可以替代下边的处理器映射器和适配器 -->
    <!-- 	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>-->


    <!--2、=======================使用注解RequestMappingInfoHandlerMapping映射器======================-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <!--3、=============================处理器适配器HandlerAdapter====================================-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!--注解适配器:加入我们的属性解析器 -->
           <property name="webBindingInitializer" ref="customBinder"></property>
       </bean>

       <!--4、============================视图解析器ViewResolver======================================-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/pages/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--5、视图view与hanlder需要自己实现-->


    <!-- ================================1自定义webBinder:属性编辑器===================================-->
    <!--<bean id="customBinder"-->
          <!--class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">-->
        <!--<property name="propertyEditorRegistrars">-->
            <!--<list>-->
                <!--&lt;!&ndash; 注册属性编辑器 &ndash;&gt;-->
                <!--<bean id="customPropertyEditor" class="com.ycy.controller.propertyeditor.CustomPropertyEditor" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- ================================2.1自定义webBinder:参数转换器===================================-->
    <bean id="customBinder"
          class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="conversionService" ref="conversionService" />
    </bean>
    <!-- conversionService -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器 -->
        <property name="converters">
            <list>
                <bean class="com.ycy.controller.converter.CustomDateConverter"/>
            </list>
        </property>
    </bean>
    <!-- ================================2.2自定义webBinder:参数转换器===================================-->
    <!--<mvc:annotation-driven conversion-service="conversionService">-->
    <!--</mvc:annotation-driven>-->
    <!--&lt;!&ndash; conversionService &ndash;&gt;-->
    <!--<bean id="conversionService"-->
          <!--class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--&lt;!&ndash; 转换器 &ndash;&gt;-->
        <!--<property name="converters">-->
            <!--<list>-->
                <!--<bean class="com.ycy.controller.converter.CustomDateConverter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
</beans>